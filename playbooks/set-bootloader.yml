---
- name: create refind bootloader
  ignore_errors: true
  when: bootloader != "bios"
  command:
    argv:
      - /usr/bin/arch-chroot
      - /mnt
      - /bin/bash
      - -c
      - |
        pacman -Sy --noconfirm efibootmgr refind 
        refind-install

- name: create grub bootloader
  ignore_errors: true
  when: bootloader == "bios"
  command:
    argv:
      - /usr/bin/arch-chroot
      - /mnt
      - /bin/bash
      - -c
      - |
        pacman -Sy --noconfirm grub
        sed -i /GRUB_DISABLE_OS_PROBER/d  /etc/default/grub
        echo "GRUB_DISABLE_OS_PROBER=true" >> /etc/default/grub
        sed -i /GRUB_DISABLE_RECOVERY/d  /etc/default/grub
        echo "GRUB_DISABLE_RECOVERY=true" >> /etc/default/grub
        sed -i /GRUB_TIMEOUT/d  /etc/default/grub
        echo "GRUB_TIMEOUT=0" >> /etc/default/grub
        sed -i /GRUB_CMDLINE_LINUX_DEFAULT/d  /etc/default/grub
        echo 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash lsm=landlock,lockdown,yama,integrity,selinux,bpf" >> /etc/default/grub'
        grub-install {{ install_device_name }}
        grub-mkconfig -o /boot/grub/grub.cfg

- name: get UUID
  shell: "blkid | grep {{ install_device_name }}2 | awk -F : '{print \"blkid -s UUID -o value \"$1}' |sh"
  register: UUID_value

- name: set refind setting because incorrect settings due to arch-chroot 
  when: bootloader != "bios"
  copy:
    owner: root
    group: root
    force: yes
    dest: /mnt/boot/refind_linux.conf
    content: |
      "Boot using default options"     "root=UUID={{ UUID_value['stdout'] }} rw add_efi_memmap initrd=boot\initramfs-linux.img"
      "Boot using fallback initramfs"  "root=UUID={{ UUID_value['stdout'] }} rw add_efi_memmap initrd=boot\initramfs-linux-fallback.img"
      "Boot to terminal"               "root=UUID={{ UUID_value['stdout'] }} rw add_efi_memmap initrd=boot\initramfs-linux.img systemd.unit=multi-user.target"