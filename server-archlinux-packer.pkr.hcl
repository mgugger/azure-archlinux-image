packer {
  required_plugins {
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = "~> 1"
    }
    qemu = {
      source  = "github.com/hashicorp/qemu"
      version = "~> 1"
    }
  }
}

variable "password" {
  type = string
}

variable "luks_passphrase" {
  type = string
}

variable "random_seed_for_oath" {
  type = string
}

variable "resource_group_for_image" {
  type = string
}

variable "ssh_authorized_keys_bas64" {
  type = string
}

variable "storage_account_name" {
  type = string
}

variable "username" {
  type = string
}

variable "smtp_server_incl_port" {
  type = string
  default = "smtp.gmail.com:587"
}

variable "smtp_user" {
  type = string
}

variable "smtp_pass" {
  type = string
}

variable "notification_email" {
  type = string
}

variable "smtp_sender" {
  type = string
}

source "qemu" "autogenerated_1" {
  accelerator      = "kvm"
  boot_command     = ["<enter><wait60><enter>", "curl -sfSLO http://{{ .HTTPIP }}:{{ .HTTPPort }}/packer.sh<enter><wait>", "chmod +x *.sh<enter>", "./packer.sh<enter>"]
  boot_wait        = "20s"
  cpus             = 2
  disk_cache       = "unsafe"
  disk_compression = true
  disk_discard     = "unmap"
  disk_size        = "4000M"
  firmware         = "/usr/share/OVMF/x64/OVMF_CODE.fd"
  format           = "raw"
  headless         = true
  http_directory   = "http"
  iso_checksum     = "none"
  iso_url          = "https://mirror.puzzle.ch/archlinux/iso/latest/archlinux-x86_64.iso"
  output_directory = "./packer_output/qemu"
  qemuargs         = [["-m", "2048M"], ["-boot", "menu=on,splash-time=10000"]]
  shutdown_command = "sudo systemctl poweroff"
  ssh_password     = "root"
  ssh_timeout      = "20m"
  ssh_username     = "root"
}

build {
  sources = ["source.qemu.autogenerated_1"]

  provisioner "shell" {
    script = "./http/wait-for-keyring.sh"
  }

  provisioner "shell" {
    inline = ["pacman -Sy --noconfirm archlinux-keyring && pacman -Sy --noconfirm ansible"]
  }

  provisioner "ansible-local" {
    extra_arguments = ["--extra-vars", "\"username=${var.username} luks_passphrase=${var.luks_passphrase} password=${var.password} mtp_user={{user `smtp_user`}} smtp_pass={{user `smtp_pass`}} smtp_sender={{user `smtp_sender`}} smtp_server_incl_port={{user `smtp_server_incl_port`}} password={{user `password`}} notification_email={{user `notification_email`}} ssh_authorized_keys_bas64=${var.ssh_authorized_keys_bas64} random_seed=${var.random_seed_for_oath}\"", "-v"]
    playbook_dir    = "playbooks"
    playbook_file   = "playbooks/1_archlinux-server-install-playbook.yml"
  }

  post-processor "shell-local" {
    inline = ["set -e; qemu-img convert -f raw -O vpc -o subformat=fixed,force_size ./packer_output/qemu/packer-qemu ./packer_output/archlinux.vhd", "azcopy login --identity", "azcopy copy ./packer_output/archlinux.vhd https://${var.storage_account_name}.blob.core.windows.net/archlinux/", "az login --identity", "az image create --source https://${var.storage_account_name}.blob.core.windows.net/archlinux/archlinux.vhd --name archlinux -g ${var.resource_group_for_image} --os-type linux --hyper-v-generation V2 --os-disk-caching ReadOnly", "echo \"random seed is: ${var.random_seed_for_oath} and base32 $(oathtool -v --totp -d 6 ${var.random_seed_for_oath} | grep '^Base32 secret:' | sed 's/^.*: //')\"", "echo \"QR Code for oath otp is\"", "qrencode -t UTF8 \"otpauth://totp/Archlinux:${var.username}@archlinux?secret=$(oathtool -v --totp -d 6 ${var.random_seed_for_oath} | grep \"^Base32 secret:\" | cut -d \" \" -f3)&issuer=${var.username}\"", "rm -rf packer_output/"]
  }
}